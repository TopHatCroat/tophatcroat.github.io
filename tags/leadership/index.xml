<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>leadership on Antonio Martinović blog</title><link>https://martinovic.blog/tags/leadership/</link><description>Recent content in leadership on Antonio Martinović blog</description><generator>Hugo -- gohugo.io</generator><managingEditor>martinovic.antonio@gmail.com (Antonio Martinović)</managingEditor><webMaster>martinovic.antonio@gmail.com (Antonio Martinović)</webMaster><copyright>Copyright 2024 by Antonio Martinović</copyright><lastBuildDate>Thu, 22 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://martinovic.blog/tags/leadership/index.xml" rel="self" type="application/rss+xml"/><item><title>Don't present solutions, present problems</title><link>https://martinovic.blog/posts/dont-present-problems-present-solutions/</link><pubDate>Thu, 22 Jun 2023 00:00:00 +0000</pubDate><author>martinovic.antonio@gmail.com (Antonio Martinović)</author><guid>https://martinovic.blog/posts/dont-present-problems-present-solutions/</guid><description>&lt;h1 id="the-biggest-challenge-with-new-leaders-is-letting-go">The biggest challenge with new leaders is letting go
&lt;a href="#the-biggest-challenge-with-new-leaders-is-letting-go" class="anchor"> &lt;svg fill="#444444" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-link-45deg" viewBox="0 0 16 16">
&lt;path d="M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"/>
&lt;path d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z"/>
&lt;/svg> &lt;/a>
&lt;/h1>
&lt;p>If you are in the top end of seniority in your team or company, either in
technical or domain aspects, chances are you will quickly understand the issue
or a new feature your team is presented with and you’ll also have a good clue on
how to approach it due to your technical knowledge or familiarity of the product
and the system. This is great and extremely valuable to the organisation, but
it’s not always beneficial to immediately share your insight with the team.&lt;/p>
&lt;p>This is one of the most fundamental mindset shifts when moving to a
leadership focused role and it’s often one of the most difficult ones, I know
it was for me. It is a great feeling to be the person with all the answers, the
dopamine hit of everyone listening and agreeing with you when you shoot a great
solution out immediately as you were presented with a problem is very addictive,
but it stops being productive rather quickly.&lt;/p>
&lt;p>Your job now is to support and develop others, if you are always presenting
solutions, you are not doing that because others don’t have an opportunity to
learn and develop and because of this, I will go even as far as to say that
always presenting solutions is hurting the entire organisation in the long term.
What happens if you get hit by a bus or, more probably, go on a vacation for two
weeks? Will your team become paralysed? Will they be able to solve a crisis?&lt;/p>
&lt;p>This gets proportionally more important with high achievers who want to be
noticed and want to solve the big problems and if they don’t get the chance,
they will either leave, or worse, stop striving for more due to a lack of
motivation. Ask them directly how to solve a problem, it’s mutually beneficial,
and it&amp;rsquo;s supposed to be genuine, not tricking others into a false sense
responsibility, it won&amp;rsquo;t work if you make a ceremony out of it.&lt;/p></description></item><item><title>There are no dumb questions</title><link>https://martinovic.blog/posts/no-dumb-questions/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><author>martinovic.antonio@gmail.com (Antonio Martinović)</author><guid>https://martinovic.blog/posts/no-dumb-questions/</guid><description>&lt;h1 id="there-are-no-dumb-questions-only-dumb-answers">There are no dumb questions, only dumb answers
&lt;a href="#there-are-no-dumb-questions-only-dumb-answers" class="anchor"> &lt;svg fill="#444444" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-link-45deg" viewBox="0 0 16 16">
&lt;path d="M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"/>
&lt;path d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z"/>
&lt;/svg> &lt;/a>
&lt;/h1>
&lt;p>Above is something I always repeat when someone starts a question with &amp;ldquo;This is
probably a dumb question, but&amp;hellip;&amp;rdquo;.
The thought process behind it makes total sense: either a person doesn&amp;rsquo;t want to
waste the time of other people on the team or doesn&amp;rsquo;t want to look silly, so
they start with a nice cushion to fall back on in case somebody answers in a
condescending manner.
But in reality, this kind of interaction doesn&amp;rsquo;t help anyone.
Let me break down my reasoning.&lt;/p>
&lt;h2 id="asking-lots-of-questions-saves-time">Asking lots of questions saves time
&lt;a href="#asking-lots-of-questions-saves-time" class="anchor"> &lt;svg fill="#444444" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-link-45deg" viewBox="0 0 16 16">
&lt;path d="M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"/>
&lt;path d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z"/>
&lt;/svg> &lt;/a>
&lt;/h2>
&lt;p>You know what&amp;rsquo;s much dumber than asking stupid questions? Carrying on with doing
something with an incorrect assumption from the beginning.
Many wise people have been heard quoting: &amp;ldquo;Assumption is the mother of all
fuck-ups&amp;rdquo;.
Making sure that requirements are well-defined and that you understand them
completely is always a good reason to ask yet another question.
This ensures that you are not wasting your own time, and then additionally, the
time needed for you or another person to notice the mistake and for the
corrections to be made.
Any mistake, in general, is much cheaper to fix time-wise before any
implementation work takes place, and it gets exponentially more expensive with
each stage, from QA to production.&lt;/p>
&lt;h2 id="it-offers-a-chance-to-rethink">It offers a chance to rethink
&lt;a href="#it-offers-a-chance-to-rethink" class="anchor"> &lt;svg fill="#444444" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-link-45deg" viewBox="0 0 16 16">
&lt;path d="M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"/>
&lt;path d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z"/>
&lt;/svg> &lt;/a>
&lt;/h2>
&lt;p>People are surprisingly adept at forgetting things, overlooking details and
jumping to conclusions, so sometimes the simplest of questions can make even the
most senior team members take a step back and reassess, or observe the problem
from another perspective and notice something new, maybe that an important piece
of information is missing or a technical debt that needs to be dealt with first
related to that shortcut we took in the previous sprint.
Most products are trying to solve difficult problems with edge cases and
indirect complexities, otherwise, those should instead be an Excel spreadsheet
with a few macros or a WordPress site.&lt;/p>
&lt;h2 id="it-promotes-a-culture-of-communication-and-collaboration">It promotes a culture of communication and collaboration
&lt;a href="#it-promotes-a-culture-of-communication-and-collaboration" class="anchor"> &lt;svg fill="#444444" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-link-45deg" viewBox="0 0 16 16">
&lt;path d="M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"/>
&lt;path d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z"/>
&lt;/svg> &lt;/a>
&lt;/h2>
&lt;p>Very often there is a lot of uncertainty when new features or products are
developed, by fostering clear and open communication through encouragement of
asking questions we can greatly reduce those uncertainties. When people feel
comfortable sharing their thoughts and ideas they will be more likely to discuss
their work and seek assistance when needed, and you want this kind of
cooperation within a team.
Everyone can behave in this way, but it’s especially important for more senior
members as they should aim for their behaviour being what others look up to, and
if they are acting like a dismissive smartarses others will be afraid to speak
for fear of looking stupid.&lt;/p>
&lt;h1 id="but-please-be-respectful-of-others-time">But please be respectful of others’ time
&lt;a href="#but-please-be-respectful-of-others-time" class="anchor"> &lt;svg fill="#444444" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-link-45deg" viewBox="0 0 16 16">
&lt;path d="M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"/>
&lt;path d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z"/>
&lt;/svg> &lt;/a>
&lt;/h1>
&lt;p>Asking questions is good, regardless if you think it’s a small question or a big
question, especially as a more junior team member, you don’t understand the
whole domain enough to know how good the question is, and sometime the same
question will be asked multiple times, sometimes it’s just that complicated and
that’s fine (this is a good indication that it should be documented).
With that said, if you asked your colleague a question and they’ve invested time
and effort to answer you, then you should invest the effort to remember what was
said, or even better, write it down, because it can get irritating to be asked
the same question multiple times, it could be interpreted as disrespectful even.&lt;/p></description></item><item><title>Improvement days</title><link>https://martinovic.blog/posts/improvement-days/</link><pubDate>Wed, 15 Feb 2023 00:00:00 +0000</pubDate><author>martinovic.antonio@gmail.com (Antonio Martinović)</author><guid>https://martinovic.blog/posts/improvement-days/</guid><description>&lt;p>Improvement day(s) is an event in which each team member is given a chance to
use the day(s) in whichever way they want, well as long as it’s something
productive, where are not here for improving Tekken or Rocket League skills on
the PlayStation.
What we are about here is different things like learning something new, trying
out a new library or tool and even hacking out a tiny proof of concept.
In the company I work at, we’ve been doing this for more than 2 years already,
and I’ve seen it become one of the things everybody is looking forward to, it
has helped in promoting innovation and creativity, learning and cooperation as
well as getting across the message that constant experimentation and improvement
is part of our culture, and we support it by having dedicated time for it.&lt;/p>
&lt;h3 id="how-it-works">How it works?
&lt;a href="#how-it-works" class="anchor"> &lt;svg fill="#444444" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-link-45deg" viewBox="0 0 16 16">
&lt;path d="M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"/>
&lt;path d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z"/>
&lt;/svg> &lt;/a>
&lt;/h3>
&lt;p>The reasoning behind something like this is that we want to give everyone an
opportunity to do something completely different, without feeling pressure to
succeed, the only expectation is learning and sharing that knowledge with others
afterwards.
The process looks like this, everyone who wants to participate comes up with
ideas for improvement and writes them down in a public shared space, it
can be an idea that they want to work on or for someone else to take up.
Others can then give their input on the idea or even suggest that they join
forces and work on it together.
Then before we kick the improvement day(s) off, everyone participating gets
together and shares with others what they will be doing.
The end of this event is another meeting called “Improvement demo” where we
present the outcomes, however successful they may be.&lt;/p>
&lt;p>It’s important to stress that it is completely OK not to participate, maybe
whatever the person is working on as part of daily business at the moment is
even more interesting, and also that it’s OK not
to achieve what was initially planned, it’s a very much a defining part of life
that it doesn&amp;rsquo;t always go according to the plan and that’s fine, this is an
opportunity to learn something from it, maybe that PoC wasn&amp;rsquo;t as simple as
originally thought, or, more often, the idea was a bit too ambitious from the
start.
This is one of the reasons why the initial meeting is there, it gives another
chance for more senior colleagues to add their suggestions and raise any
concerns.&lt;/p>
&lt;h3 id="when-it-goes-right">When it goes right
&lt;a href="#when-it-goes-right" class="anchor"> &lt;svg fill="#444444" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-link-45deg" viewBox="0 0 16 16">
&lt;path d="M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"/>
&lt;path d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z"/>
&lt;/svg> &lt;/a>
&lt;/h3>
&lt;p>In the past I’ve seen some really awesome things come out of it like
improvements in the CI/CD pipeline, developer experience, web app loading time
reduction, ease of onboarding new team members, but also sometimes it shows the
benefits of doing things in a different and new way and this is then brought
into the regular sprint for any effort necessary to generally apply it.
There are also benefits that are not so visible, like facilitating discussion,
bouncing of ideas and generally advocating the spirit of always trying new
things with the aim of doing it better.&lt;/p>
&lt;h3 id="things-to-watch-out-for">Things to watch out for
&lt;a href="#things-to-watch-out-for" class="anchor"> &lt;svg fill="#444444" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-link-45deg" viewBox="0 0 16 16">
&lt;path d="M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"/>
&lt;path d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z"/>
&lt;/svg> &lt;/a>
&lt;/h3>
&lt;p>Improvement days are not about fixing technical debt or implementing purely
technical ideas that should otherwise be done as part of regular work, it should
not be used as a go to for all kinds of experimentation especially when those
are bigger things that can’t be done by a single person.
Another issue that is much more difficult to notice is that it could lead to
individuals feeling a bit unhappy after one or more of these which, in their
eyes, ended up as a “failure” because they did not achieve the goal, or if they
look at another’s “success” with a bit of an envious aftertaste.
I’ve put those words in quotes because at all times, whatever the end result is,
something has been learnt, and learning doesn&amp;rsquo;t always bring what we expect it
to.
So you might say, maybe better call it “Learning days”, but I don’t personally
like that because learning happens every day during usual work, not just on
certain days.&lt;/p>
&lt;h3 id="final-thoughts">Final thoughts
&lt;a href="#final-thoughts" class="anchor"> &lt;svg fill="#444444" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-link-45deg" viewBox="0 0 16 16">
&lt;path d="M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z"/>
&lt;path d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z"/>
&lt;/svg> &lt;/a>
&lt;/h3>
&lt;p>I hope this post gave you an inspiration to try and push for something like this
at your own workplace.
The other companies that do something like this only do it with the engineering
department, but I feel like this is something that could be useful in other
departments as well since all have complex processes that could benefit from a
fresh new improvement, but I have yet to find instances where the company does
this more broadly.&lt;/p></description></item></channel></rss>
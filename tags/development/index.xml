<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>development on Antonio MartinoviÄ‡ Blog</title>
    <link>https://martinovic.blog/tags/development/</link>
    <description>Recent content in development on Antonio MartinoviÄ‡ Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 04 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://martinovic.blog/tags/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mistakes of modern development, vol 1</title>
      <link></link>
      <pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate>
      
      <guid></guid>
      <description>You don&amp;rsquo;t need a new stack (probably) ðŸ”—Let&amp;rsquo;s imagine you are a lead dev in a small company building an application that is used by a few hundred customers. The application stack is just a server running your code and a database. Simple, but you can actually do quite a bit with just these two.
Along with the application, let&amp;rsquo;s also imagine a few simple scenarios and how to tackle them.</description>
    </item>
    
    <item>
      <title>Setup Elasticsearch on CircleCI</title>
      <link>https://martinovic.blog/post/circle-ci-elasticsearh/</link>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://martinovic.blog/post/circle-ci-elasticsearh/</guid>
      <description>This is going to be a short one ðŸ”—I&amp;rsquo;m only writing this one because I could not Google exactly what I needed as easily as I expected, so hopefully it might help someone. Setting up an Elasticsearch instance to test against on CircleCI is actually quite straightforward.
Your .circleci/config.yml should look something like this:
jobs: build: docker: - image: circleci/&amp;lt;language&amp;gt;:&amp;lt;version TAG&amp;gt; - image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0 #1 environment: - transport.host: localhost #2 - network.</description>
    </item>
    
  </channel>
</rss>
